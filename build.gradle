apply plugin: "java"

dependencies {
	implementation project(':JRomManager')
	implementation project(':Jtrrntzip')
	implementation project(':JUpdater')
}

evaluationDependsOn(project(':JUpdater').path)
evaluationDependsOn(project(':JRomManager').path)

task installZip(type: Zip, dependsOn: [':JRomManager:assemble']) {
	from (project(':JRomManager').configurations.compile) {
		into('lib')
	}
	from (project(':JRomManager').jar)
   	from (project(':JUpdater').jar)
   	from (new File(project(':JRomManager').projectDir,'dist')) {
    	include '*.bat'
		include '*.sh'
		fileMode = 0755
	}
	archiveName 'install.zip'
	destinationDir = file("$buildDir/tmp/")
}

task installProperties {
   def props = new Properties()
   props.setProperty('name','optyfr')
   props.setProperty('project','JRomManager')
   def writer = new FileWriter(file("$buildDir/tmp/install.properties"))
   try {
      props.store(writer,null)
      writer.flush()
   } finally {
      writer.close()
   }
}
task oneJar( type: Jar , dependsOn: [':JUpdater:assemble', installProperties]) {
    baseName = 'JRomManager-install-'+project(':JRomManager').version
    from project(':JUpdater').sourceSets.main.output.classesDir
	from project(':JUpdater').configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	from installZip
	from file("$buildDir/tmp/install.properties")
	manifest {
		attributes(
			"Manifest-Version"     : "1.0",
			"Specification-Title"  : "JRomManager",
			"Specification-Version": project(':JRomManager').props.getProperty("Specification-Version"),
			"Implementation-Title" : "jrm",
			"Implementation-Version" : project(':JRomManager').props.getProperty("Implementation-Version"),
			"Main-Class"           : "jupdater.JUpdater",
		)
		archiveName baseName + '.' + extension
	}
	destinationDir = file("$buildDir/distributions/")
}

assemble.dependsOn oneJar
